{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\escape-from-tech-neck\\\\frontend\\\\src\\\\components\\\\record\\\\record.js\";\nimport React, { useState } from \"react\";\nimport { Line } from 'react-chartjs-2';\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\nimport \"./record.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: ['good', 'tech-neck', 'leaned', 'sleeping', 'resting in chin'],\n  datasets: [{\n    type: 'line',\n    label: 'Dataset 1',\n    borderColor: 'rgb(54, 162, 235)',\n    borderWidth: 2,\n    data: [1, 2, 3, 4, 5]\n  }, {\n    type: 'bar',\n    label: 'Dataset 2',\n    backgroundColor: 'rgb(255, 99, 132)',\n    data: [1, 2, 3, 4, 5, 6],\n    borderColor: 'red',\n    borderWidth: 2\n  }, {\n    type: 'bar',\n    label: 'Dataset 3',\n    backgroundColor: 'rgb(75, 192, 192)',\n    data: [1, 2, 3, 4, 5, 6]\n  }]\n};\nconst options = {\n  spanGaps: true,\n  maxBarThickness: 30,\n  grouped: true,\n  interaction: {\n    mode: 'index'\n  }\n};\n\nconst Record = () => {\n  return (\n    /*#__PURE__*/\n    //<Router>\n    _jsxDEV(\"div\", {\n      className: \"record\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        type: \"line\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) //</Router>\n\n  );\n};\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["C:/Users/user/etn/escape-from-tech-neck/frontend/src/components/record/record.js"],"names":["React","useState","Line","Link","BrowserRouter","Router","data","labels","datasets","type","label","borderColor","borderWidth","backgroundColor","options","spanGaps","maxBarThickness","grouped","interaction","mode","Record"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,IAAR,EAAcC,aAAa,IAAIC,MAA/B,QAA4C,kBAA5C;AACA,OAAO,cAAP;;AACA,MAAMC,IAAI,GAAG;AACTC,EAAAA,MAAM,EAAG,CAAC,MAAD,EAAQ,WAAR,EAAoB,QAApB,EAA6B,UAA7B,EAAwC,iBAAxC,CADA;AAETC,EAAAA,QAAQ,EAAE,CAAC;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,KAAK,EAAE,WAFA;AAGPC,IAAAA,WAAW,EAAE,mBAHN;AAIPC,IAAAA,WAAW,EAAE,CAJN;AAKPN,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AALC,GAAD,EAOR;AACEG,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEG,IAAAA,eAAe,EAAE,mBAHnB;AAIEP,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAJR;AAKEK,IAAAA,WAAW,EAAE,KALf;AAMEC,IAAAA,WAAW,EAAE;AANf,GAPQ,EAeR;AACEH,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEG,IAAAA,eAAe,EAAE,mBAHnB;AAIEP,IAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AAJR,GAfQ;AAFD,CAAb;AAwBA,MAAMQ,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,IADE;AAEZC,EAAAA,eAAe,EAAE,EAFL;AAGZC,EAAAA,OAAO,EAAE,IAHG;AAIZC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE;AADK;AAJD,CAAhB;;AASA,MAAMC,MAAM,GAAG,MAAM;AACjB;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACQ,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,IAAI,EAAEd,IAAxB;AAA8B,QAAA,OAAO,EAAEQ;AAAvC;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YAFJ,CAKI;;AALJ;AAQD,CATH;;KAAMM,M;AAUN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Link, BrowserRouter as Router} from 'react-router-dom';\r\nimport \"./record.css\"\r\nconst data = {\r\n    labels : ['good','tech-neck','leaned','sleeping','resting in chin'],\r\n    datasets :[{\r\n        type: 'line',\r\n        label: 'Dataset 1',\r\n        borderColor: 'rgb(54, 162, 235)',\r\n        borderWidth: 2,\r\n        data: [1, 2, 3, 4, 5],\r\n      },\r\n      {\r\n        type: 'bar',\r\n        label: 'Dataset 2',\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        data: [1, 2, 3, 4, 5, 6],\r\n        borderColor: 'red',\r\n        borderWidth: 2,\r\n      },\r\n      {\r\n        type: 'bar',\r\n        label: 'Dataset 3',\r\n        backgroundColor: 'rgb(75, 192, 192)',\r\n        data: [1, 2, 3, 4, 5, 6],\r\n      },]\r\n};\r\nconst options = {\r\n    spanGaps: true,\r\n    maxBarThickness: 30,\r\n    grouped: true,\r\n    interaction: {\r\n      mode: 'index',\r\n    },\r\n    \r\n  };\r\nconst Record = () => {\r\n    return (\r\n        //<Router>\r\n        <div className=\"record\">\r\n                <Line type=\"line\" data={data} options={options} />\r\n        </div>\r\n        //</Router>\r\n    );\r\n    \r\n  };\r\nexport default Record\r\n"]},"metadata":{},"sourceType":"module"}