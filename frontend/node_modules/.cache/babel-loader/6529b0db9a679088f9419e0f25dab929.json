{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\escape-from-tech-neck\\\\frontend\\\\src\\\\components\\\\camera\\\\camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./camera.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet toggle = \"stop\";\n\nconst TestOverlay = props => {\n  _s();\n\n  const sound = props.sound;\n  const alertt = props.alertt;\n  const sound1 = props.sound1;\n  const sound2 = props.sound2;\n  const sound3 = props.sound3;\n  const sound4 = props.sound4;\n  const [posture, setPosture] = useState(0);\n  const [buttonName, setButtonName] = useState(\"start tracking\");\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  console.log(\"i'm here\", sound);\n  const [result, setResult] = useState(\"\");\n  const canvasRef = useRef();\n  const imageRef = useRef();\n  const videoRef = useRef(); // Get camera feed\n\n  useEffect(() => {\n    async function getCameraStream() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: true\n      });\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }\n\n    ;\n    getCameraStream();\n  }, []); // Send iage to API\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (toggle == \"stop\") {\n        return () => clearInterval(interval);\n      } else {\n        captureImageFromCamera();\n\n        if (imageRef.current) {\n          const formData = new FormData();\n          formData.append('image', imageRef.current);\n          const response = await fetch('/classify', {\n            method: \"POST\",\n            body: formData\n          });\n\n          if (response.status === 200) {\n            const text = await response.text();\n            setResult(text);\n            checkPos(text);\n          } else {\n            setResult(\"Error from API. \");\n          }\n        }\n      }\n    }, 5000); // <- interval in ms\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const goAlert = () => {\n    console.log(\"goalert\", alertt);\n    if (alertt == 0) alertSound();else if (alertt == 1) alertPop();else {\n      alertSound();\n      alertPop();\n    }\n  };\n\n  const checkPos = function (text) {\n    console.log(\"result:\", text); //if bad posture \n\n    if (text != \"0\") {\n      console.log(\"alert type\", alertt);\n      console.log(\"sound\", sound);\n      console.log(\"bad\", posture);\n      setPosture(posture => posture + 1);\n      console.log(\"bad after\", posture);\n    } //else\n    else {\n      setPosture(0);\n    }\n\n    console.log(posture); //if bad posture for 3 times, alert\n\n    if (posture >= 3) goAlert();\n  };\n\n  function alertSound() {\n    if (sound == \"sound1\") {\n      console.log(\"sound1\");\n      sound1.play();\n      sound1.loop = false;\n      sound1.pause();\n    }\n\n    if (sound == \"sound2\") {\n      console.log(\"sound2\");\n      sound2.play();\n      sound2.loop = false;\n      sound2.pause();\n    }\n\n    if (sound == \"sound3\") {\n      console.log(\"sound3\");\n      sound3.play();\n      sound3.loop = false;\n      sound3.pause();\n    }\n\n    if (sound == \"sound4\") {\n      console.log(\"sound4\");\n      sound4.play();\n      sound4.loop = false;\n      sound4.pause();\n    }\n  }\n\n  function alertPop() {\n    alert();\n  }\n\n  const playCameraStream = () => {\n    if (videoRef.current) {\n      videoRef.current.play();\n    }\n  };\n\n  const captureImageFromCamera = () => {\n    const context = canvasRef.current.getContext('2d');\n    const {\n      videoWidth,\n      videoHeight\n    } = videoRef.current;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    context.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\n    canvasRef.current.toBlob(blob => {\n      imageRef.current = blob;\n    });\n  };\n\n  const toggleAlert = function () {\n    if (toggle == \"stop\") {\n      toggle = \"start\";\n      setButtonName(\"stop tracking\");\n    } else if (toggle == \"start\") {\n      toggle = \"stop\";\n      setButtonName(\"start tracking\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [props.sound, props.sound1, props.sound2, props.sound3, props.sound4, props.alertt, /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        onCanPlay: () => playCameraStream(),\n        id: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currently seeing: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startTrack\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startBut\",\n        onClick: toggleAlert,\n        children: buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestOverlay, \"vWc+i0+VN1NBC7D3cpYHgor+Lwo=\");\n\n_c = TestOverlay;\nexport default TestOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestOverlay\");","map":{"version":3,"sources":["C:/Users/user/etn/escape-from-tech-neck/frontend/src/components/camera/camera.js"],"names":["React","useState","useEffect","useRef","Webcam","toggle","TestOverlay","props","sound","alertt","sound1","sound2","sound3","sound4","posture","setPosture","buttonName","setButtonName","webcamRef","imgSrc","setImgSrc","console","log","result","setResult","canvasRef","imageRef","videoRef","getCameraStream","stream","navigator","mediaDevices","getUserMedia","audio","video","current","srcObject","interval","setInterval","clearInterval","captureImageFromCamera","formData","FormData","append","response","fetch","method","body","status","text","checkPos","goAlert","alertSound","alertPop","play","loop","pause","alert","playCameraStream","context","getContext","videoWidth","videoHeight","width","height","drawImage","toBlob","blob","toggleAlert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,cAAP;;;AAGA,IAAIC,MAAM,GAAG,MAAb;;AAEE,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACI,MAArB;AACA,QAAMC,MAAM,GAAGL,KAAK,CAACK,MAArB;AACA,QAAMC,MAAM,GAAGN,KAAK,CAACM,MAArB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAYC,aAAZ,IAA6BhB,QAAQ,CAAC,gBAAD,CAA3C;AACA,QAAMiB,SAAS,GAAGlB,KAAK,CAACG,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,IAAD,CAApC;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,KAAxB;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMwB,SAAS,GAAGtB,MAAM,EAAxB;AACA,QAAMuB,QAAQ,GAAGvB,MAAM,EAAvB;AACA,QAAMwB,QAAQ,GAAGxB,MAAM,EAAvB,CAhB6B,CAiB7B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe0B,eAAf,GAAiC;AAC/B,YAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACvDC,QAAAA,KAAK,EAAE,KADgD;AAEvDC,QAAAA,KAAK,EAAE;AAFgD,OAApC,CAArB;;AAKA,UAAIP,QAAQ,CAACQ,OAAb,EAAsB;AACpBR,QAAAA,QAAQ,CAACQ,OAAT,CAAiBC,SAAjB,GAA6BP,MAA7B;AACD;AACF;;AAAA;AAEDD,IAAAA,eAAe;AAChB,GAbQ,EAaN,EAbM,CAAT,CAlB6B,CAiC7B;;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmC,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvC,UAAGjC,MAAM,IAAI,MAAb,EAAoB;AAClB,eAAO,MAAMkC,aAAa,CAACF,QAAD,CAA1B;AACD,OAFD,MAGK;AACHG,QAAAA,sBAAsB;;AAEtB,YAAId,QAAQ,CAACS,OAAb,EAAsB;AACpB,gBAAMM,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBjB,QAAQ,CAACS,OAAlC;AAEA,gBAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACxCC,YAAAA,MAAM,EAAE,MADgC;AAExCC,YAAAA,IAAI,EAAEN;AAFkC,WAAd,CAA5B;;AAIA,cAAIG,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAE3B,kBAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;AACAzB,YAAAA,SAAS,CAACyB,IAAD,CAAT;AACAC,YAAAA,QAAQ,CAACD,IAAD,CAAR;AAED,WAND,MAMO;AACLzB,YAAAA,SAAS,CAAC,kBAAD,CAAT;AACD;AACF;AACF;AACF,KA1B2B,EA0BzB,IA1ByB,CAA5B,CADc,CA2BJ;;AACV,WAAO,MAAMe,aAAa,CAACF,QAAD,CAA1B;AACD,GA7BQ,EA6BN,EA7BM,CAAT;;AA8BA,QAAMc,OAAO,GAAG,MAAK;AACnB9B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,MAAvB;AACA,QAAGA,MAAM,IAAE,CAAX,EAAc2C,UAAU,GAAxB,KACK,IAAG3C,MAAM,IAAI,CAAb,EAAgB4C,QAAQ,GAAxB,KAEL;AACED,MAAAA,UAAU;AACVC,MAAAA,QAAQ;AACT;AACF,GATD;;AAUA,QAAMH,QAAQ,GAAG,UAASD,IAAT,EAAc;AAC7B5B,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB2B,IAAtB,EAD6B,CAErB;;AACA,QAAGA,IAAI,IAAI,GAAX,EACA;AACE5B,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA2Bb,MAA3B;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBd,KAApB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBR,OAAlB;AACAC,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAE,CAArB,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBR,OAAxB;AACD,KAPD,CAQA;AARA,SASK;AACHC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAfqB,CAgBrB;;AACA,QAAGA,OAAO,IAAI,CAAd,EAAiBqC,OAAO;AACjC,GAlBD;;AAmBA,WAASC,UAAT,GAAqB;AACnB,QAAG5C,KAAK,IAAI,QAAZ,EAAsB;AACpBa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAZ,MAAAA,MAAM,CAAC4C,IAAP;AACA5C,MAAAA,MAAM,CAAC6C,IAAP,GAAc,KAAd;AACA7C,MAAAA,MAAM,CAAC8C,KAAP;AACD;;AACD,QAAGhD,KAAK,IAAI,QAAZ,EAAsB;AACpBa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAX,MAAAA,MAAM,CAAC2C,IAAP;AACA3C,MAAAA,MAAM,CAAC4C,IAAP,GAAc,KAAd;AACA5C,MAAAA,MAAM,CAAC6C,KAAP;AACD;;AACD,QAAGhD,KAAK,IAAI,QAAZ,EAAsB;AACpBa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAV,MAAAA,MAAM,CAAC0C,IAAP;AACA1C,MAAAA,MAAM,CAAC2C,IAAP,GAAc,KAAd;AACA3C,MAAAA,MAAM,CAAC4C,KAAP;AACD;;AACD,QAAGhD,KAAK,IAAI,QAAZ,EAAsB;AACpBa,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,MAAAA,MAAM,CAACyC,IAAP;AACAzC,MAAAA,MAAM,CAAC0C,IAAP,GAAc,KAAd;AACA1C,MAAAA,MAAM,CAAC2C,KAAP;AACD;AACF;;AACD,WAASH,QAAT,GAAmB;AACjBI,IAAAA,KAAK;AACN;;AACD,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAI/B,QAAQ,CAACQ,OAAb,EAAsB;AACpBR,MAAAA,QAAQ,CAACQ,OAAT,CAAiBmB,IAAjB;AACD;AACF,GAJD;;AAMA,QAAMd,sBAAsB,GAAG,MAAM;AACnC,UAAMmB,OAAO,GAAGlC,SAAS,CAACU,OAAV,CAAkByB,UAAlB,CAA6B,IAA7B,CAAhB;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8BnC,QAAQ,CAACQ,OAA7C;AAEAV,IAAAA,SAAS,CAACU,OAAV,CAAkB4B,KAAlB,GAA0BF,UAA1B;AACApC,IAAAA,SAAS,CAACU,OAAV,CAAkB6B,MAAlB,GAA2BF,WAA3B;AAEAH,IAAAA,OAAO,CAACM,SAAR,CAAkBtC,QAAQ,CAACQ,OAA3B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C0B,UAA1C,EAAsDC,WAAtD;AAEArC,IAAAA,SAAS,CAACU,OAAV,CAAkB+B,MAAlB,CAA0BC,IAAD,IAAU;AACjCzC,MAAAA,QAAQ,CAACS,OAAT,GAAmBgC,IAAnB;AACD,KAFD;AAGD,GAZD;;AAcA,QAAMC,WAAW,GAAC,YAAU;AAC1B,QAAG/D,MAAM,IAAE,MAAX,EAAmB;AACjBA,MAAAA,MAAM,GAAG,OAAT;AACAY,MAAAA,aAAa,CAAC,eAAD,CAAb;AACD,KAHD,MAIK,IAAGZ,MAAM,IAAE,OAAX,EAAoB;AACvBA,MAAAA,MAAM,GAAG,MAAT;AACAY,MAAAA,aAAa,CAAC,gBAAD,CAAb;AACD;AACF,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA,iBACGV,KAAK,CAACC,KADT,EAEGD,KAAK,CAACG,MAFT,EAGGH,KAAK,CAACI,MAHT,EAIGJ,KAAK,CAACK,MAJT,EAKGL,KAAK,CAACM,MALT,EAMGN,KAAK,CAACE,MANT,eAOE;AAAO,QAAA,GAAG,EAAEkB,QAAZ;AAAsB,QAAA,SAAS,EAAE,MAAM+B,gBAAgB,EAAvD;AAA2D,QAAA,EAAE,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,GAAG,EAAEjC,SAAb;AAAwB,QAAA,MAAM;AAA9B;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,yCAAsBF,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE6C,WAAtC;AAAA,kBACKpD;AADL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,EAkBGG,MAAM,iBACL;AACE,MAAA,GAAG,EAAEA;AADP;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,kBADF;AA0BD,CAnLD;;GAAMb,W;;KAAAA,W;AAqLN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./camera.css\"\r\n\r\n  \r\nlet toggle = \"stop\";\r\n  \r\n  const TestOverlay = (props) => {\r\n    const sound = props.sound;\r\n    const alertt = props.alertt;\r\n    const sound1 = props.sound1;\r\n    const sound2 = props.sound2;\r\n    const sound3 = props.sound3;\r\n    const sound4 = props.sound4;\r\n    const [posture, setPosture] = useState(0);\r\n    const [buttonName,setButtonName] = useState(\"start tracking\");\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n\r\n    console.log(\"i'm here\", sound);\r\n    const [result, setResult] = useState(\"\");\r\n    const canvasRef = useRef();\r\n    const imageRef = useRef();\r\n    const videoRef = useRef();\r\n    // Get camera feed\r\n    useEffect(() => {\r\n      async function getCameraStream() {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: false,\r\n          video: true,\r\n        });\r\n    \r\n        if (videoRef.current) {      \r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      };\r\n    \r\n      getCameraStream();\r\n    }, []);\r\n\r\n    // Send iage to API\r\n    useEffect(() => {\r\n      const interval = setInterval(async () => {\r\n        if(toggle == \"stop\"){\r\n          return () => clearInterval(interval);\r\n        } \r\n        else {\r\n          captureImageFromCamera();\r\n\r\n          if (imageRef.current) {\r\n            const formData = new FormData();\r\n            formData.append('image', imageRef.current);\r\n\r\n            const response = await fetch('/classify', {\r\n              method: \"POST\",\r\n              body: formData,\r\n            });\r\n            if (response.status === 200) {\r\n              \r\n              const text = await response.text();\r\n              setResult(text);\r\n              checkPos(text);\r\n\r\n            } else {\r\n              setResult(\"Error from API. \");\r\n            }\r\n          }\r\n        }\r\n      }, 5000); // <- interval in ms\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n    const goAlert = () =>{\r\n      console.log(\"goalert\", alertt);\r\n      if(alertt==0) alertSound();\r\n      else if(alertt == 1) alertPop();\r\n      else\r\n      {\r\n        alertSound();\r\n        alertPop();\r\n      }\r\n    }\r\n    const checkPos = function(text){\r\n      console.log(\"result:\",text)\r\n              //if bad posture \r\n              if(text != \"0\") \r\n              {\r\n                console.log(\"alert type\" , alertt);\r\n                console.log(\"sound\",sound);\r\n                console.log(\"bad\",posture);\r\n                setPosture(posture => posture +1);\r\n                console.log(\"bad after\",posture);\r\n              }\r\n              //else\r\n              else {\r\n                setPosture(0);\r\n              }\r\n              console.log(posture);\r\n              //if bad posture for 3 times, alert\r\n              if(posture >= 3) goAlert();\r\n    }\r\n    function alertSound(){\r\n      if(sound == \"sound1\") {\r\n        console.log(\"sound1\");\r\n        sound1.play();\r\n        sound1.loop = false;\r\n        sound1.pause();\r\n      }\r\n      if(sound == \"sound2\") {\r\n        console.log(\"sound2\");\r\n        sound2.play();\r\n        sound2.loop = false;\r\n        sound2.pause();\r\n      }\r\n      if(sound == \"sound3\") {\r\n        console.log(\"sound3\");\r\n        sound3.play();\r\n        sound3.loop = false;\r\n        sound3.pause();\r\n      }\r\n      if(sound == \"sound4\") {\r\n        console.log(\"sound4\");\r\n        sound4.play();\r\n        sound4.loop = false;\r\n        sound4.pause();\r\n      }\r\n    }\r\n    function alertPop(){\r\n      alert();\r\n    }\r\n    const playCameraStream = () => {\r\n      if (videoRef.current) {\r\n        videoRef.current.play();\r\n      }\r\n    };\r\n\r\n    const captureImageFromCamera = () => {\r\n      const context = canvasRef.current.getContext('2d');\r\n      const { videoWidth, videoHeight } = videoRef.current;\r\n  \r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n  \r\n      context.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\r\n  \r\n      canvasRef.current.toBlob((blob) => {\r\n        imageRef.current = blob;\r\n      })\r\n    };\r\n\r\n    const toggleAlert=function(){\r\n      if(toggle==\"stop\") {\r\n        toggle = \"start\";\r\n        setButtonName(\"stop tracking\");\r\n      }\r\n      else if(toggle==\"start\") {\r\n        toggle = \"stop\";\r\n        setButtonName(\"start tracking\");\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <main>\r\n          {props.sound}\r\n          {props.sound1}\r\n          {props.sound2}\r\n          {props.sound3}\r\n          {props.sound4}\r\n          {props.alertt}\r\n          <video ref={videoRef} onCanPlay={() => playCameraStream()} id=\"video\" />\r\n          <canvas ref={canvasRef} hidden></canvas>\r\n          <p>Currently seeing: {result}</p>\r\n        </main>\r\n        <div className =\"startTrack\">\r\n          <button className=\"startBut\" onClick={toggleAlert}>\r\n              {buttonName}\r\n          </button>\r\n          \r\n        </div>\r\n        {imgSrc && (\r\n          <img\r\n            src={imgSrc}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default TestOverlay"]},"metadata":{},"sourceType":"module"}