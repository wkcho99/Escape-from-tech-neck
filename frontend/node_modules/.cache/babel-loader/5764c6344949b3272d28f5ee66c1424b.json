{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\escape-from-tech-neck\\\\frontend\\\\src\\\\components\\\\camera\\\\camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./camera.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet toggle = \"stop\";\n\nfunction CheckPos(props, text, posture, setPosture) {\n  console.log(\"result:\", text); //if bad posture \n\n  if (text != \"0\") {\n    console.log(\"alert type\", props.alarm);\n    console.log(\"sound\", props.alarm);\n    setPosture(3);\n    console.log(\"bad after\", posture);\n  } //else\n  else {\n    setPosture(0);\n  }\n\n  console.log(posture); //if bad posture for 3 times, alert\n\n  if (posture == 3) goAlert();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.alarm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 15\n  }, this);\n}\n\n_c = CheckPos;\n\nconst goAlert = function (props) {\n  console.log(\"goalert\", props.alertType);\n  if (props.alertType == 0) AlertSounds();else if (props.alertType == 1) alertPop();else {\n    AlertSounds();\n    alertPop();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.alertType\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\nconst AlertSounds = function (props) {\n  const sound1 = new Audio('/src/sound1.mp3');\n  const sound2 = new Audio('/src/sound2.mp3');\n  const sound3 = new Audio('/src/sound3.mp3');\n  const sound4 = new Audio('/src/sound4.mp3');\n\n  if (props.alarm == \"sound1\") {\n    console.log(\"sound1\");\n    sound1.play();\n    sound1.loop = false;\n    sound1.pause();\n  }\n\n  if (props.alarm == \"sound2\") {\n    console.log(\"sound2\");\n    sound2.play();\n    sound2.loop = false;\n    sound2.pause();\n  }\n\n  if (props.alarm == \"sound3\") {\n    console.log(\"sound3\");\n    sound3.play();\n    sound3.loop = false;\n    sound3.pause();\n  }\n\n  if (props.alarm == \"sound4\") {\n    console.log(\"sound4\");\n    sound4.play();\n    sound4.loop = false;\n    sound4.pause();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.alarm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = AlertSounds;\n\nconst alertPop = function () {\n  alert();\n};\n\nconst TestOverlay = props => {\n  _s();\n\n  const [buttonName, setButtonName] = useState(\"start tracking\");\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const [posture, setPosture] = useState(0);\n  const [result, setResult] = useState(\"\");\n  const canvasRef = useRef();\n  const imageRef = useRef();\n  const videoRef = useRef(); // Get camera feed\n\n  useEffect(() => {\n    async function getCameraStream() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: true\n      });\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }\n\n    ;\n    getCameraStream();\n  }, []); // Send iage to API\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (toggle == \"stop\") {\n        return () => clearInterval(interval);\n      } else {\n        captureImageFromCamera();\n\n        if (imageRef.current) {\n          const formData = new FormData();\n          formData.append('image', imageRef.current);\n          const response = await fetch('/classify', {\n            method: \"POST\",\n            body: formData\n          });\n\n          if (response.status === 200) {\n            const text = await response.text();\n            setResult(text);\n            CheckPos(props, text, posture, setPosture);\n          } else {\n            setResult(\"Error from API. \");\n          }\n        }\n      }\n    }, 5000); // <- interval in ms\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const playCameraStream = () => {\n    if (videoRef.current) {\n      videoRef.current.play();\n    }\n  };\n\n  const captureImageFromCamera = () => {\n    const context = canvasRef.current.getContext('2d');\n    const {\n      videoWidth,\n      videoHeight\n    } = videoRef.current;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    context.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\n    canvasRef.current.toBlob(blob => {\n      imageRef.current = blob;\n    });\n  };\n\n  const toggleAlert = function () {\n    if (toggle == \"stop\") {\n      toggle = \"start\";\n      setButtonName(\"stop tracking\");\n    } else if (toggle == \"start\") {\n      toggle = \"stop\";\n      setButtonName(\"start tracking\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        onCanPlay: () => playCameraStream(),\n        id: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currently seeing: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startTrack\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startBut\",\n        onClick: toggleAlert,\n        children: buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestOverlay, \"FqDEnvWMIqLWZClIU5JRF/erDX4=\");\n\n_c3 = TestOverlay;\nexport { TestOverlay, CheckPos, goAlert, AlertSounds };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckPos\");\n$RefreshReg$(_c2, \"AlertSounds\");\n$RefreshReg$(_c3, \"TestOverlay\");","map":{"version":3,"sources":["C:/Users/user/etn/escape-from-tech-neck/frontend/src/components/camera/camera.js"],"names":["React","useState","useEffect","useRef","Webcam","toggle","CheckPos","props","text","posture","setPosture","console","log","alarm","goAlert","alertType","AlertSounds","alertPop","sound1","Audio","sound2","sound3","sound4","play","loop","pause","alert","TestOverlay","buttonName","setButtonName","webcamRef","imgSrc","setImgSrc","result","setResult","canvasRef","imageRef","videoRef","getCameraStream","stream","navigator","mediaDevices","getUserMedia","audio","video","current","srcObject","interval","setInterval","clearInterval","captureImageFromCamera","formData","FormData","append","response","fetch","method","body","status","playCameraStream","context","getContext","videoWidth","videoHeight","width","height","drawImage","toBlob","blob","toggleAlert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./camera.css\"\r\n  let toggle = \"stop\";\r\n  function CheckPos(props,text,posture,setPosture){\r\n    console.log(\"result:\",text)\r\n            //if bad posture \r\n            if(text != \"0\") \r\n            {\r\n              console.log(\"alert type\" , props.alarm);\r\n              console.log(\"sound\",props.alarm);\r\n              setPosture(3);\r\n              console.log(\"bad after\",posture);\r\n            }\r\n            //else\r\n            else {\r\n              setPosture(0);\r\n            }\r\n            console.log(posture);\r\n            //if bad posture for 3 times, alert\r\n            if(posture == 3) goAlert();\r\n            return (\r\n              <div>{props.alarm}</div>\r\n            );\r\n  }\r\n  const goAlert = function(props){\r\n    console.log(\"goalert\", props.alertType);\r\n    if(props.alertType==0) AlertSounds();\r\n    else if(props.alertType == 1) alertPop();\r\n    else\r\n    {\r\n      AlertSounds();\r\n      alertPop();\r\n    }\r\n    return (\r\n      <div>{props.alertType}</div>\r\n    );\r\n  }\r\n\r\n  const AlertSounds = function(props){\r\n    const sound1 = new Audio('/src/sound1.mp3');\r\n    const sound2 = new Audio('/src/sound2.mp3');\r\n    const sound3 = new Audio('/src/sound3.mp3');\r\n    const sound4 = new Audio('/src/sound4.mp3');\r\n    if(props.alarm == \"sound1\") {\r\n      console.log(\"sound1\");\r\n      sound1.play();\r\n      sound1.loop = false;\r\n      sound1.pause();\r\n    }\r\n    if(props.alarm == \"sound2\") {\r\n      console.log(\"sound2\");\r\n      sound2.play();\r\n      sound2.loop = false;\r\n      sound2.pause();\r\n    }\r\n    if(props.alarm == \"sound3\") {\r\n      console.log(\"sound3\");\r\n      sound3.play();\r\n      sound3.loop = false;\r\n      sound3.pause();\r\n    }\r\n    if(props.alarm == \"sound4\") {\r\n      console.log(\"sound4\");\r\n      sound4.play();\r\n      sound4.loop = false;\r\n      sound4.pause();\r\n    }\r\n    return (\r\n      <div>{props.alarm}</div>\r\n    );\r\n  }\r\n  const alertPop = function(){\r\n    alert();\r\n  }\r\n  const TestOverlay = (props) => {\r\n    const [buttonName,setButtonName] = useState(\"start tracking\");\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n    const [posture, setPosture] = useState(0);\r\n    const [result, setResult] = useState(\"\");\r\n    const canvasRef = useRef();\r\n    const imageRef = useRef();\r\n    const videoRef = useRef();\r\n    // Get camera feed\r\n    useEffect(() => {\r\n      async function getCameraStream() {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: false,\r\n          video: true,\r\n        });\r\n    \r\n        if (videoRef.current) {      \r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      };\r\n    \r\n      getCameraStream();\r\n    }, []);\r\n\r\n    // Send iage to API\r\n    useEffect(() => {\r\n\r\n      const interval = setInterval(async () => {\r\n        if(toggle == \"stop\"){\r\n          return () => clearInterval(interval);\r\n        } \r\n        else {\r\n          captureImageFromCamera();\r\n\r\n          if (imageRef.current) {\r\n            const formData = new FormData();\r\n            formData.append('image', imageRef.current);\r\n\r\n            const response = await fetch('/classify', {\r\n              method: \"POST\",\r\n              body: formData,\r\n            });\r\n            if (response.status === 200) {\r\n              \r\n              const text = await response.text();\r\n              setResult(text);\r\n              CheckPos(props, text, posture,setPosture);\r\n            } else {\r\n              setResult(\"Error from API. \");\r\n            }\r\n          }\r\n        }\r\n      }, 5000); // <- interval in ms\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n    \r\n    const playCameraStream = () => {\r\n      if (videoRef.current) {\r\n        videoRef.current.play();\r\n      }\r\n    };\r\n\r\n    const captureImageFromCamera = () => {\r\n      const context = canvasRef.current.getContext('2d');\r\n      const { videoWidth, videoHeight } = videoRef.current;\r\n  \r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n  \r\n      context.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\r\n  \r\n      canvasRef.current.toBlob((blob) => {\r\n        imageRef.current = blob;\r\n      })\r\n    };\r\n\r\n    const toggleAlert=function(){\r\n      if(toggle==\"stop\") {\r\n        toggle = \"start\";\r\n        setButtonName(\"stop tracking\");\r\n      }\r\n      else if(toggle==\"start\") {\r\n        toggle = \"stop\";\r\n        setButtonName(\"start tracking\");\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <main>\r\n          <video ref={videoRef} onCanPlay={() => playCameraStream()} id=\"video\" />\r\n          <canvas ref={canvasRef} hidden></canvas>\r\n          <p>Currently seeing: {result}</p>\r\n        </main>\r\n        <div className =\"startTrack\">\r\n          <button className=\"startBut\" onClick={toggleAlert}>\r\n              {buttonName}\r\n          </button>\r\n          \r\n        </div>\r\n        {imgSrc && (\r\n          <img\r\n            src={imgSrc}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  export {TestOverlay,CheckPos,goAlert,AlertSounds};"]},"metadata":{},"sourceType":"module"}