{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\Escape-from-tech-neck\\\\frontend\\\\src\\\\components\\\\record\\\\record.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport \"./record.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst legend = {\n  display: false\n};\nconst options = {\n  spanGaps: true,\n  maxBarThickness: 30,\n  grouped: true,\n  interaction: {\n    mode: 'index'\n  }\n};\nlet pro0, pro1, pro2, pro3, pro4;\n\nconst Record = props => {\n  var usetime = props.usetime;\n  var posture0 = props.posture0;\n  var posture1 = props.posture1;\n  var posture2 = props.posture2;\n  var posture3 = props.posture3;\n  var posture4 = props.posture4;\n  console.log(\"posture 0 \", posture0);\n  console.log(\"posture 1 \", posture1);\n\n  const calpro = function () {\n    var tot = posture0 + posture1 + posture2 + posture3 + posture4;\n    console.log(\"posture 0 \", posture0);\n    console.log(\"posture 1 \", posture1);\n    console.log(\"total:\", tot);\n    pro0 = posture0 / tot;\n    pro1 = posture1 / tot;\n    pro2 = posture2 / tot;\n    pro3 = posture3 / tot;\n    pro4 = posture4 / tot;\n    console.log(pro0, pro1, pro2, pro3, pro4);\n    return [pro0, pro1, pro2, pro3, pro4];\n  };\n\n  const caltime = function () {\n    var hr = parseInt(usetime / 3600000);\n    var min = parseInt(usetime / 60000);\n    var sec = parseInt(usetime / 1000);\n    return hr + \" hr \" + min + \" min \" + sec + \" sec \";\n  };\n\n  const recomm = function () {\n    var maxvar = Math.max(posture1, posture2, posture3, posture4);\n    if (maxvar == posture1) return \"Neck\";else if (maxvar == posture2) return \"Back\";else if (maxvar == posture3) return \"Wakeup\";else if (maxvar == posture4) return \"Neck\";\n  };\n\n  const data = {\n    datasets: [{\n      type: 'bar',\n      label: 'Your Posture Record',\n      backgroundColor: '#09AA7C',\n      data: [{\n        x: 'good',\n        y: calpro()[0]\n      }, {\n        x: 'tech-neck',\n        y: calpro()[1]\n      }, {\n        x: 'leaned',\n        y: calpro()[2]\n      }, {\n        x: 'sleeping',\n        y: calpro()[3]\n      }, {\n        x: 'resting in chin',\n        y: calpro()[4]\n      }],\n      borderWidth: 0\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [\"Study Time:\", caltime(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), \"Good Posture:\", posture0, \"times\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), \"Recommended Exercise :\", recomm(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"line\",\n      data: data,\n      options: options,\n      legend: legend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["C:/Users/user/etn/Escape-from-tech-neck/frontend/src/components/record/record.js"],"names":["React","Line","Bar","Chart","registerables","register","legend","display","options","spanGaps","maxBarThickness","grouped","interaction","mode","pro0","pro1","pro2","pro3","pro4","Record","props","usetime","posture0","posture1","posture2","posture3","posture4","console","log","calpro","tot","caltime","hr","parseInt","min","sec","recomm","maxvar","Math","max","data","datasets","type","label","backgroundColor","x","y","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Line,Bar } from 'react-chartjs-2'\r\nimport { Chart, registerables } from 'chart.js';\r\nimport \"./record.css\"\r\nChart.register(...registerables);\r\nconst legend = {\r\n    display: false,\r\n  };\r\nconst options = {\r\n    spanGaps: true,\r\n    maxBarThickness: 30,\r\n    grouped: true,\r\n    interaction: {\r\n      mode: 'index',\r\n    },\r\n  };\r\n\r\nlet pro0,pro1,pro2,pro3,pro4;\r\nconst Record = (props) => {\r\n    var usetime = props.usetime;\r\n    var posture0 = props.posture0;\r\n    var posture1 = props.posture1; \r\n    var posture2 = props.posture2;\r\n    var posture3 = props.posture3;\r\n    var posture4 = props.posture4;\r\n    console.log( \"posture 0 \", posture0);\r\n    console.log( \"posture 1 \", posture1);\r\n    \r\n    const calpro = function(){\r\n      \r\n      var tot = posture0 + posture1 + posture2 + posture3 + posture4;\r\n      console.log( \"posture 0 \", posture0);\r\n    console.log( \"posture 1 \", posture1);\r\n    console.log(\"total:\",tot);\r\n      pro0 = posture0/tot;\r\n      pro1 = posture1/tot;\r\n      pro2 = posture2/tot;\r\n      pro3 = posture3/tot;\r\n      pro4 = posture4/tot;\r\n      console.log(pro0 , pro1, pro2, pro3, pro4);\r\n      return [pro0 , pro1, pro2, pro3, pro4];\r\n    }\r\n    const caltime = function(){\r\n      var hr = parseInt(usetime/3600000);\r\n      var min = parseInt(usetime/60000);\r\n      var sec = parseInt(usetime/1000);\r\n      return hr+\" hr \"+min+\" min \"+sec+\" sec \";\r\n    }\r\n    const recomm = function(){\r\n      var maxvar = Math.max(posture1 , posture2 , posture3 , posture4);\r\n      if(maxvar == posture1) return \"Neck\"\r\n      else if(maxvar == posture2) return \"Back\"\r\n      else if(maxvar == posture3) return \"Wakeup\"\r\n      else if(maxvar == posture4) return \"Neck\"\r\n    }\r\n    const data = {\r\n      datasets: [\r\n          {\r\n            type: 'bar',\r\n            label: 'Your Posture Record',\r\n            backgroundColor: '#09AA7C',\r\n            data: [\r\n              { x: 'good', y: calpro()[0] },\r\n              { x: 'tech-neck', y: calpro()[1] },\r\n              { x: 'leaned', y: calpro()[2] },\r\n              { x: 'sleeping', y: calpro()[3] },\r\n              { x: 'resting in chin', y: calpro()[4] }\r\n            ],\r\n            borderWidth: 0,\r\n          },\r\n          \r\n        ],\r\n    };\r\n  return (\r\n    <div className='chart'>\r\n        Study Time: \r\n        {caltime()}\r\n        <br/>\r\n        Good Posture: \r\n        {posture0}\r\n        times\r\n        <br/>\r\n        Recommended Exercise : \r\n        {recomm()}\r\n        <br/>\r\n        \r\n      <Line type=\"line\" data={data} options={options} legend = {legend}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Record;\r\n"]},"metadata":{},"sourceType":"module"}