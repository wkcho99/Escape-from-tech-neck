{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\escape-from-tech-neck\\\\frontend\\\\src\\\\components\\\\header\\\\header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./header.css\";\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\n\nconst Header = () => {\n  _s();\n\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const toggleModal = function () {\n    if (modalIsOpen) setIsOpen(false);else setIsOpen(true);\n  };\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    /*#__PURE__*/\n    //<Router>\n    _jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"ETN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"subtitle\",\n        children: \"escape from tech neck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settingButton\",\n          onclick: toggleModal,\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: modalIsOpen,\n          onAfterOpen: afterOpenModal,\n          onRequestClose: closeModal,\n          style: customStyles,\n          contentLabel: \"Example Modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            ref: _subtitle => subtitle = _subtitle,\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"I am a modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"option\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/start/step1\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"option\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/exercise\",\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"option\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/help\",\n            children: \"Help\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"option\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/record\",\n            children: \"Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) //</Router>\n\n  );\n};\n\n_s(Header, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/user/etn/escape-from-tech-neck/frontend/src/components/header/header.js"],"names":["React","useState","Link","BrowserRouter","Router","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","Header","subtitle","modalIsOpen","setIsOpen","toggleModal","openModal","afterOpenModal","style","color","closeModal","_subtitle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./header.css\"\r\nimport {Link,BrowserRouter as Router} from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  Modal.setAppElement('#root');\r\n\r\nconst Header = () => {\r\n    let subtitle;\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const toggleModal = function(){\r\n        if(modalIsOpen) setIsOpen(false);\r\n        else setIsOpen(true);\r\n    }\r\n    function openModal() {\r\n        setIsOpen(true);\r\n      }\r\n    \r\n      function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        subtitle.style.color = '#f00';\r\n      }\r\n    \r\n      function closeModal() {\r\n        setIsOpen(false);\r\n      }\r\n    return (\r\n        //<Router>\r\n        <div className=\"header\">\r\n            <div id = \"title\">\r\n                <Link to = \"/\">\r\n                ETN\r\n                </Link>\r\n            </div>\r\n            <div id = \"subtitle\">\r\n                escape from tech neck\r\n            </div>\r\n            <>\r\n            <button className = \"settingButton\" onclick ={toggleModal}>\r\n                Modal\r\n            </button>\r\n            <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\r\n                <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Hello</h2>\r\n                <button onClick={closeModal}>close</button>\r\n                <div>I am a modal</div>\r\n            </Modal>\r\n            </>\r\n            <div className = \"menu\">\r\n            <div class = \"option\">\r\n            <Link to =\"/start/step1\">\r\n                Start\r\n            </Link>\r\n            </div>\r\n            <div class = \"option\">\r\n            <Link to =\"/exercise\">\r\n                Exercise \r\n            </Link>\r\n            </div>\r\n            <div class = \"option\">\r\n            <Link to =\"/help\">\r\n                Help \r\n            </Link>\r\n            </div>\r\n            <div class = \"option\">\r\n            <Link to =\"/record\">\r\n                Record\r\n            </Link>\r\n            </div>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n        //</Router>\r\n    );\r\n    \r\n  };\r\nexport default Header"]},"metadata":{},"sourceType":"module"}