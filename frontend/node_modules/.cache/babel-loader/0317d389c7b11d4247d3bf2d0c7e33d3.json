{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\src\\\\components\\\\camera\\\\camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./camera.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WebcamComponent = () => /*#__PURE__*/_jsxDEV(Webcam, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 31\n}, this);\n\n_c = WebcamComponent;\nconst videoConstraints = {\n  width: 650,\n  height: 520,\n  facingMode: \"user\"\n};\nlet playAlert;\nlet toggle = \"stop\";\n\nconst TestOverlay = () => {\n  _s();\n\n  const [buttonName, setButtonName] = useState(\"start tracking\");\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = React.useState(null);\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n  console.log(\"play\", playAlert);\n\n  const func1 = () => {\n    capture();\n  };\n\n  const toggleAlert = function () {\n    if (toggle == \"stop\") {\n      startAlert();\n      toggle = \"start\";\n      setButtonName(\"stop tracking\");\n    } else if (toggle == \"start\") {\n      stopAlert();\n      toggle = \"stop\";\n      setButtonName(\"start tracking\");\n    }\n  };\n\n  const startAlert = function () {\n    playAlert = setInterval(func1, 10000);\n    console.log(\"start\", playAlert);\n  };\n\n  const stopAlert = function () {\n    console.log(\"stop\", playAlert);\n    clearInterval(playAlert);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      videoConstraints: videoConstraints,\n      screenshotFormat: \"image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startTrack\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startBut\",\n        onClick: toggleAlert,\n        children: buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestOverlay, \"fc7GZXe41m6UX1nBS5nXPaOzyW4=\");\n\n_c2 = TestOverlay;\nexport default TestOverlay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WebcamComponent\");\n$RefreshReg$(_c2, \"TestOverlay\");","map":{"version":3,"sources":["C:/Users/user/etn/src/components/camera/camera.js"],"names":["React","useState","Webcam","WebcamComponent","videoConstraints","width","height","facingMode","playAlert","toggle","TestOverlay","buttonName","setButtonName","webcamRef","useRef","imgSrc","setImgSrc","capture","useCallback","imageSrc","current","getScreenshot","console","log","func1","toggleAlert","startAlert","stopAlert","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,cAAP;;;;AACA,MAAMC,eAAe,GAAG,mBAAM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAA9B;;KAAMA,e;AACN,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,GADc;AAErBC,EAAAA,MAAM,EAAE,GAFa;AAGrBC,EAAAA,UAAU,EAAE;AAHS,CAAzB;AAKE,IAAIC,SAAJ;AACA,IAAIC,MAAM,GAAG,MAAb;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BX,QAAQ,CAAC,gBAAD,CAA3C;AACA,QAAMY,SAAS,GAAGb,KAAK,CAACc,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,KAAK,CAACC,QAAN,CAAe,IAAf,CAA5B;AAEA,QAAMgB,OAAO,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,MAAM;AACtC,UAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAV,CAAkBC,aAAlB,EAAjB;AACAL,IAAAA,SAAS,CAACG,QAAD,CAAT;AACD,GAHe,EAGb,CAACN,SAAD,EAAYG,SAAZ,CAHa,CAAhB;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBf,SAAnB;;AACA,QAAMgB,KAAK,GAAG,MAAK;AACfP,IAAAA,OAAO;AACV,GAFD;;AAGA,QAAMQ,WAAW,GAAC,YAAU;AAC1B,QAAGhB,MAAM,IAAE,MAAX,EAAmB;AACjBiB,MAAAA,UAAU;AACVjB,MAAAA,MAAM,GAAG,OAAT;AACAG,MAAAA,aAAa,CAAC,eAAD,CAAb;AACD,KAJD,MAKK,IAAGH,MAAM,IAAE,OAAX,EAAoB;AACvBkB,MAAAA,SAAS;AACTlB,MAAAA,MAAM,GAAG,MAAT;AACAG,MAAAA,aAAa,CAAC,gBAAD,CAAb;AACD;AACF,GAXD;;AAYA,QAAMc,UAAU,GAAG,YAAW;AAC1BlB,IAAAA,SAAS,GAAGoB,WAAW,CAACJ,KAAD,EAAQ,KAAR,CAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBf,SAApB;AACD,GAHH;;AAIA,QAAMmB,SAAS,GAAG,YAAW;AACzBL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBf,SAAnB;AACAqB,IAAAA,aAAa,CAACrB,SAAD,CAAb;AACD,GAHH;;AAKA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,KADT;AAEE,MAAA,GAAG,EAAEK,SAFP;AAGE,MAAA,gBAAgB,EAAIT,gBAHtB;AAIE,MAAA,gBAAgB,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAEqB,WAAtC;AAAA,kBACKd;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPF,EAYGI,MAAM,iBACL;AACE,MAAA,GAAG,EAAEA;AADP;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADF;AAoBD,CAtDD;;GAAML,W;;MAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./camera.css\"\r\nconst WebcamComponent = () => <Webcam />;\r\nconst videoConstraints = {\r\n    width: 650,\r\n    height: 520,\r\n    facingMode: \"user\"\r\n  };\r\n  let playAlert;\r\n  let toggle = \"stop\";\r\n  const TestOverlay = () => {\r\n    const [buttonName,setButtonName] = useState(\"start tracking\");\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = React.useState(null);\r\n  \r\n    const capture = React.useCallback(() => {\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      setImgSrc(imageSrc);\r\n    }, [webcamRef, setImgSrc]);\r\n    console.log(\"play\",playAlert);\r\n    const func1 = () =>{\r\n        capture();\r\n    }\r\n    const toggleAlert=function(){\r\n      if(toggle==\"stop\") {\r\n        startAlert();\r\n        toggle = \"start\";\r\n        setButtonName(\"stop tracking\");\r\n      }\r\n      else if(toggle==\"start\") {\r\n        stopAlert();\r\n        toggle = \"stop\";\r\n        setButtonName(\"start tracking\");\r\n      }\r\n    }\r\n    const startAlert = function() {\r\n        playAlert = setInterval(func1, 10000);\r\n        console.log(\"start\",playAlert);\r\n      };\r\n    const stopAlert = function() {\r\n        console.log(\"stop\",playAlert);\r\n        clearInterval(playAlert);\r\n      };\r\n  \r\n    return (\r\n      <>\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          videoConstraints = {videoConstraints}\r\n          screenshotFormat=\"image/jpeg\"\r\n        />\r\n        <div className =\"startTrack\">\r\n        <button className=\"startBut\" onClick={toggleAlert}>\r\n            {buttonName}\r\n        </button>\r\n        </div>\r\n        {imgSrc && (\r\n          <img\r\n            src={imgSrc}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default TestOverlay"]},"metadata":{},"sourceType":"module"}