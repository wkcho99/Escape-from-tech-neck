{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\etn\\\\escape-from-tech-neck\\\\frontend\\\\src\\\\components\\\\camera\\\\camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./camera.css\";\nimport sound1_ from '../../sound1.mp3';\nimport sound2_ from '../../sound2.MP3';\nimport sound3_ from '../../sound3.mp3';\nimport sound4_ from '../../sound4.mp3';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet toggle = \"stop\";\nlet start, end;\nlet posture0, posture1, posture2, posture3, posture4;\nlet usetime, breaktime;\nlet sound, alertt, volume;\n\nconst TestOverlay = props => {\n  _s();\n\n  sound = props.sound;\n  alertt = props.alertt;\n  volume = props.volume;\n  usetime = props.usetime;\n  breaktime = props.breaktime;\n  const sound1 = new Audio(sound1_);\n  const sound2 = new Audio(sound2_);\n  const sound3 = new Audio(sound3_);\n  const sound4 = new Audio(sound4_);\n  posture0 = props.posture0;\n  posture1 = props.posture1;\n  posture2 = props.posture2;\n  posture3 = props.posture3;\n  posture4 = props.posture4;\n  const setUsetime = props.setUsetime;\n  const setPosture0 = props.setPosture0;\n  const setPosture1 = props.setPosture1;\n  const setPosture2 = props.setPosture2;\n  const setPosture3 = props.setPosture3;\n  const setPosture4 = props.setPosture4; //const [posture, setPosture] = useState(3);\n\n  var posture = 0;\n  const [buttonName, setButtonName] = useState(\"start tracking\");\n  const webcamRef = React.useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  console.log(\"i'm here\", sound, volume);\n  const [result, setResult] = useState(\"\");\n  const canvasRef = useRef();\n  const imageRef = useRef();\n  const videoRef = useRef();\n\n  const goAlert = result => {\n    posture = 0;\n    console.log(\"goalert\", alertt);\n    if (alertt == 0) alertSound();else if (alertt == 1) alertPop(result);else {\n      alertSound();\n      alertPop(result);\n    }\n  };\n\n  const checkBreak = () => {\n    var now = new Date();\n    var temp = (now - start) / 60000;\n\n    if (breaktime != 0) {\n      if (temp >= breaktime) {\n        alertSound();\n        alertBreak();\n      }\n    }\n  };\n\n  const checkPos = text => {\n    console.log(\"result:\", text); //if bad posture \n\n    if (text != \"0\") {\n      console.log(\"alert type\", alertt);\n      console.log(\"sound\", sound);\n      console.log(\"bad\", posture);\n      posture = posture + 1;\n      console.log(\"bad after\", posture);\n\n      if (text == \"1\") {\n        setPosture1(posture1 + 1);\n        console.log(\"posture 1 \", posture1);\n      } else if (text == \"2\") {\n        setPosture2(posture2 + 1);\n        console.log(\"posture 2 \", posture2);\n      } else if (text == \"3\") {\n        setPosture3(posture3 + 1);\n        console.log(\"posture 3 \", posture3);\n      } else if (text == \"4\") {\n        setPosture4(posture4 + 1);\n        console.log(\"posture 4 \", posture4);\n      }\n    } //else\n    else {\n      posture = 0;\n      setPosture0(posture0 => posture0 + 1);\n      console.log(\"posture 0 \", posture0);\n    }\n\n    console.log(posture); //if bad posture for 3 times, alert\n\n    if (posture >= 3) goAlert(text);\n  };\n\n  const alertSound = () => {\n    if (sound === \"sound1\") {\n      console.log(\"alert:\", sound, volume);\n      sound1.volume = volume / 100;\n      sound1.play();\n      sound1.loop = false;\n    }\n\n    if (sound === \"sound2\") {\n      console.log(\"alert:\", sound, volume);\n      sound2.volume = volume / 100;\n      sound2.play();\n      sound2.loop = false;\n    }\n\n    if (sound === \"sound3\") {\n      console.log(\"alert:\", sound, volume);\n      sound3.volume = volume / 100;\n      sound3.play();\n      sound3.loop = false;\n    }\n\n    if (sound === \"sound4\") {\n      console.log(\"alert:\", sound, volume);\n      sound4.volume = volume / 100;\n      sound4.play();\n      sound4.loop = false;\n    }\n  }; // Get camera feed\n\n\n  useEffect(() => {\n    async function getCameraStream() {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: false,\n        video: true\n      });\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }\n\n    ;\n    getCameraStream();\n  }, []); // Send iage to API\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (toggle == \"stop\") {\n        return () => clearInterval(interval);\n      } else {\n        captureImageFromCamera();\n\n        if (imageRef.current) {\n          const formData = new FormData();\n          formData.append('image', imageRef.current);\n          const response = await fetch('/classify', {\n            method: \"POST\",\n            body: formData\n          });\n\n          if (response.status === 200) {\n            const text = await response.text();\n            setResult(text);\n            checkPos(text);\n          } else {\n            setResult(\"Error from API. \");\n          }\n        }\n      }\n    }, 5000); // <- interval in ms\n\n    return () => clearInterval(interval);\n  }, []);\n\n  function printPos(result) {\n    console.log(\"printpos\", result);\n    if (result == \"0\") return \"good\";else if (result == \"1\") return \"tech-neck\";else if (result == \"2\") return \"leaning\";else if (result == \"3\") return \"sleeping\";else if (result == \"4\") return \"resting in chin\";\n  }\n\n  function alertPop(result) {\n    console.log(\"alert pop\", result);\n    var str = \"You are in \" + \"\\\"\" + printPos(result) + \"\\\"\" + \" posture\";\n    Swal.fire({\n      title: 'Bad Posture Detected!',\n      text: str,\n      icon: 'warning',\n      showCancelButton: false,\n      confirmButtonText: 'OK',\n      confirmButtonColor: '#FC5D5D'\n    });\n  }\n\n  function alertBreak() {\n    console.log(\"alert break\");\n    Swal.fire({\n      title: 'Break Time!!',\n      text: 'take a break and do exercise',\n      icon: 'info',\n      showCancelButton: false,\n      confirmButtonText: 'OK',\n      confirmButtonColor: '#FC5D5D'\n    });\n  }\n\n  const playCameraStream = () => {\n    if (videoRef.current) {\n      videoRef.current.play();\n    }\n  };\n\n  const captureImageFromCamera = () => {\n    const context = canvasRef.current.getContext('2d');\n    const {\n      videoWidth,\n      videoHeight\n    } = videoRef.current;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    context.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\n    canvasRef.current.toBlob(blob => {\n      imageRef.current = blob;\n    });\n  };\n\n  const toggleAlert = function () {\n    if (toggle == \"stop\") {\n      toggle = \"start\";\n      setButtonName(\"stop tracking\");\n      start = new Date();\n      console.log(\"start\", start);\n    } else if (toggle == \"start\") {\n      toggle = \"stop\";\n      setButtonName(\"start tracking\");\n      end = new Date();\n      console.log(\"end\", end);\n      var temp = end - start;\n      console.log(\"temp, usetime\", temp, usetime);\n      setUsetime(usetime + temp);\n      console.log(\"usetime\", usetime);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        onCanPlay: () => playCameraStream(),\n        id: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currently seeing: \", printPos(result)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startTrack\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startBut\",\n        onClick: toggleAlert,\n        children: buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TestOverlay, \"f8YBZl038rkQUsdWOwK7tYAN4ZE=\");\n\n_c = TestOverlay;\nexport default TestOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestOverlay\");","map":{"version":3,"sources":["C:/Users/user/etn/escape-from-tech-neck/frontend/src/components/camera/camera.js"],"names":["React","useState","useEffect","useRef","Webcam","sound1_","sound2_","sound3_","sound4_","Swal","toggle","start","end","posture0","posture1","posture2","posture3","posture4","usetime","breaktime","sound","alertt","volume","TestOverlay","props","sound1","Audio","sound2","sound3","sound4","setUsetime","setPosture0","setPosture1","setPosture2","setPosture3","setPosture4","posture","buttonName","setButtonName","webcamRef","imgSrc","setImgSrc","console","log","result","setResult","canvasRef","imageRef","videoRef","goAlert","alertSound","alertPop","checkBreak","now","Date","temp","alertBreak","checkPos","text","play","loop","getCameraStream","stream","navigator","mediaDevices","getUserMedia","audio","video","current","srcObject","interval","setInterval","clearInterval","captureImageFromCamera","formData","FormData","append","response","fetch","method","body","status","printPos","str","fire","title","icon","showCancelButton","confirmButtonText","confirmButtonColor","playCameraStream","context","getContext","videoWidth","videoHeight","width","height","drawImage","toBlob","blob","toggleAlert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,IAAIC,MAAM,GAAG,MAAb;AACA,IAAIC,KAAJ,EAAUC,GAAV;AACA,IAAIC,QAAJ,EAAaC,QAAb,EAAsBC,QAAtB,EAA+BC,QAA/B,EAAwCC,QAAxC;AACA,IAAIC,OAAJ,EAAYC,SAAZ;AACA,IAAIC,KAAJ,EAAWC,MAAX,EAAmBC,MAAnB;;AACE,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7BJ,EAAAA,KAAK,GAAGI,KAAK,CAACJ,KAAd;AACAC,EAAAA,MAAM,GAAGG,KAAK,CAACH,MAAf;AACAC,EAAAA,MAAM,GAAGE,KAAK,CAACF,MAAf;AACAJ,EAAAA,OAAO,GAAGM,KAAK,CAACN,OAAhB;AACAC,EAAAA,SAAS,GAAGK,KAAK,CAACL,SAAlB;AACA,QAAMM,MAAM,GAAG,IAAIC,KAAJ,CAAUrB,OAAV,CAAf;AACA,QAAMsB,MAAM,GAAG,IAAID,KAAJ,CAAUpB,OAAV,CAAf;AACA,QAAMsB,MAAM,GAAG,IAAIF,KAAJ,CAAUnB,OAAV,CAAf;AACA,QAAMsB,MAAM,GAAG,IAAIH,KAAJ,CAAUlB,OAAV,CAAf;AACAK,EAAAA,QAAQ,GAAGW,KAAK,CAACX,QAAjB;AACAC,EAAAA,QAAQ,GAAGU,KAAK,CAACV,QAAjB;AACAC,EAAAA,QAAQ,GAAGS,KAAK,CAACT,QAAjB;AACAC,EAAAA,QAAQ,GAAGQ,KAAK,CAACR,QAAjB;AACAC,EAAAA,QAAQ,GAAGO,KAAK,CAACP,QAAjB;AACA,QAAMa,UAAU,GAAGN,KAAK,CAACM,UAAzB;AACA,QAAMC,WAAW,GAAGP,KAAK,CAACO,WAA1B;AACA,QAAMC,WAAW,GAAGR,KAAK,CAACQ,WAA1B;AACA,QAAMC,WAAW,GAAGT,KAAK,CAACS,WAA1B;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACU,WAA1B;AACA,QAAMC,WAAW,GAAGX,KAAK,CAACW,WAA1B,CApB6B,CAqB7B;;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BrC,QAAQ,CAAC,gBAAD,CAA3C;AACA,QAAMsC,SAAS,GAAGvC,KAAK,CAACG,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBxC,QAAQ,CAAC,IAAD,CAApC;AACAyC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBvB,KAAxB,EAA8BE,MAA9B;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsB5C,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM6C,SAAS,GAAG3C,MAAM,EAAxB;AACA,QAAM4C,QAAQ,GAAG5C,MAAM,EAAvB;AACA,QAAM6C,QAAQ,GAAG7C,MAAM,EAAvB;;AACA,QAAM8C,OAAO,GAAIL,MAAD,IAAW;AACzBR,IAAAA,OAAO,GAAG,CAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBtB,MAAvB;AACA,QAAGA,MAAM,IAAE,CAAX,EAAc6B,UAAU,GAAxB,KACK,IAAG7B,MAAM,IAAI,CAAb,EAAgB8B,QAAQ,CAACP,MAAD,CAAR,CAAhB,KAEL;AACEM,MAAAA,UAAU;AACVC,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD;AACF,GAVD;;AAWA,QAAMQ,UAAU,GAAE,MAAK;AACrB,QAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,QAAIC,IAAI,GAAG,CAACF,GAAG,GAAE1C,KAAN,IAAa,KAAxB;;AACA,QAAGQ,SAAS,IAAI,CAAhB,EAAkB;AAChB,UAAGoC,IAAI,IAAEpC,SAAT,EAAmB;AACjB+B,QAAAA,UAAU;AACVM,QAAAA,UAAU;AACX;AACF;AACF,GATD;;AAUA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACzBhB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBe,IAAtB,EADyB,CAEjB;;AACA,QAAGA,IAAI,IAAI,GAAX,EACA;AACEhB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA2BtB,MAA3B;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBvB,KAApB;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBP,OAAlB;AACAA,MAAAA,OAAO,GAAGA,OAAO,GAAE,CAAnB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBP,OAAxB;;AACA,UAAGsB,IAAI,IAAI,GAAX,EAAgB;AACd1B,QAAAA,WAAW,CAAClB,QAAQ,GAAC,CAAV,CAAX;AACA4B,QAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2B7B,QAA3B;AACD,OAHD,MAIK,IAAG4C,IAAI,IAAI,GAAX,EAAgB;AACnBzB,QAAAA,WAAW,CAAClB,QAAQ,GAAC,CAAV,CAAX;AACA2B,QAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2B5B,QAA3B;AACD,OAHI,MAIA,IAAG2C,IAAI,IAAI,GAAX,EAAgB;AACnBxB,QAAAA,WAAW,CAAClB,QAAQ,GAAC,CAAV,CAAX;AACA0B,QAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2B3B,QAA3B;AACD,OAHI,MAIA,IAAG0C,IAAI,IAAI,GAAX,EAAgB;AACnBvB,QAAAA,WAAW,CAAClB,QAAQ,GAAC,CAAV,CAAX;AACAyB,QAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2B1B,QAA3B;AACD;AACF,KAvBD,CAwBA;AAxBA,SAyBK;AACHmB,MAAAA,OAAO,GAAG,CAAV;AACAL,MAAAA,WAAW,CAAClB,QAAQ,IAAEA,QAAQ,GAAC,CAApB,CAAX;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA2B9B,QAA3B;AACD;;AACD6B,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAjCiB,CAkCjB;;AACA,QAAGA,OAAO,IAAI,CAAd,EAAiBa,OAAO,CAACS,IAAD,CAAP;AAC1B,GApCD;;AAqCA,QAAMR,UAAU,GAAE,MAAI;AACpB,QAAG9B,KAAK,KAAK,QAAb,EAAuB;AACrBsB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBvB,KAArB,EAA4BE,MAA5B;AACAG,MAAAA,MAAM,CAACH,MAAP,GAAgBA,MAAM,GAAC,GAAvB;AACAG,MAAAA,MAAM,CAACkC,IAAP;AACAlC,MAAAA,MAAM,CAACmC,IAAP,GAAc,KAAd;AACD;;AACD,QAAGxC,KAAK,KAAK,QAAb,EAAuB;AACrBsB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBvB,KAArB,EAA4BE,MAA5B;AACAK,MAAAA,MAAM,CAACL,MAAP,GAAgBA,MAAM,GAAC,GAAvB;AACAK,MAAAA,MAAM,CAACgC,IAAP;AACAhC,MAAAA,MAAM,CAACiC,IAAP,GAAc,KAAd;AACD;;AACD,QAAGxC,KAAK,KAAK,QAAb,EAAuB;AACrBsB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBvB,KAArB,EAA4BE,MAA5B;AACAM,MAAAA,MAAM,CAACN,MAAP,GAAgBA,MAAM,GAAC,GAAvB;AACAM,MAAAA,MAAM,CAAC+B,IAAP;AACA/B,MAAAA,MAAM,CAACgC,IAAP,GAAc,KAAd;AACD;;AACD,QAAGxC,KAAK,KAAK,QAAb,EAAuB;AACrBsB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBvB,KAArB,EAA4BE,MAA5B;AACAO,MAAAA,MAAM,CAACP,MAAP,GAAgBA,MAAM,GAAC,GAAvB;AACAO,MAAAA,MAAM,CAAC8B,IAAP;AACA9B,MAAAA,MAAM,CAAC+B,IAAP,GAAc,KAAd;AACD;AACF,GAzBD,CAzF6B,CAmH7B;;;AACA1D,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe2D,eAAf,GAAiC;AAC/B,YAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACvDC,QAAAA,KAAK,EAAE,KADgD;AAEvDC,QAAAA,KAAK,EAAE;AAFgD,OAApC,CAArB;;AAKA,UAAInB,QAAQ,CAACoB,OAAb,EAAsB;AACpBpB,QAAAA,QAAQ,CAACoB,OAAT,CAAiBC,SAAjB,GAA6BP,MAA7B;AACD;AACF;;AAAA;AAEDD,IAAAA,eAAe;AAChB,GAbQ,EAaN,EAbM,CAAT,CApH6B,CAmI7B;;AACA3D,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoE,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvC,UAAG7D,MAAM,IAAI,MAAb,EAAoB;AAClB,eAAO,MAAM8D,aAAa,CAACF,QAAD,CAA1B;AACD,OAFD,MAGK;AACHG,QAAAA,sBAAsB;;AAEtB,YAAI1B,QAAQ,CAACqB,OAAb,EAAsB;AACpB,gBAAMM,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB7B,QAAQ,CAACqB,OAAlC;AAEA,gBAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACxCC,YAAAA,MAAM,EAAE,MADgC;AAExCC,YAAAA,IAAI,EAAEN;AAFkC,WAAd,CAA5B;;AAIA,cAAIG,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAE3B,kBAAMvB,IAAI,GAAG,MAAMmB,QAAQ,CAACnB,IAAT,EAAnB;AACAb,YAAAA,SAAS,CAACa,IAAD,CAAT;AACAD,YAAAA,QAAQ,CAACC,IAAD,CAAR;AAED,WAND,MAMO;AACLb,YAAAA,SAAS,CAAC,kBAAD,CAAT;AACD;AACF;AACF;AACF,KA1B2B,EA0BzB,IA1ByB,CAA5B,CADc,CA2BJ;;AACV,WAAO,MAAM2B,aAAa,CAACF,QAAD,CAA1B;AACD,GA7BQ,EA6BN,EA7BM,CAAT;;AA+BA,WAASY,QAAT,CAAkBtC,MAAlB,EAAyB;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,MAAxB;AACA,QAAGA,MAAM,IAAE,GAAX,EAAgB,OAAO,MAAP,CAAhB,KACK,IAAIA,MAAM,IAAE,GAAZ,EAAiB,OAAO,WAAP,CAAjB,KACA,IAAIA,MAAM,IAAI,GAAd,EAAmB,OAAO,SAAP,CAAnB,KACA,IAAIA,MAAM,IAAI,GAAd,EAAmB,OAAO,UAAP,CAAnB,KACA,IAAIA,MAAM,IAAI,GAAd,EAAkB,OAAO,iBAAP;AACxB;;AACD,WAASO,QAAT,CAAkBP,MAAlB,EAAyB;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,MAAzB;AACA,QAAIuC,GAAG,GAAG,gBAAc,IAAd,GAAmBD,QAAQ,CAACtC,MAAD,CAA3B,GAAoC,IAApC,GAAyC,UAAnD;AACAnC,IAAAA,IAAI,CAAC2E,IAAL,CAAU;AACRC,MAAAA,KAAK,EAAE,uBADC;AAER3B,MAAAA,IAAI,EAAEyB,GAFE;AAGRG,MAAAA,IAAI,EAAE,SAHE;AAIRC,MAAAA,gBAAgB,EAAG,KAJX;AAKRC,MAAAA,iBAAiB,EAAE,IALX;AAMRC,MAAAA,kBAAkB,EAAE;AANZ,KAAV;AAQD;;AACD,WAASjC,UAAT,GAAqB;AACnBd,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAlC,IAAAA,IAAI,CAAC2E,IAAL,CAAU;AACRC,MAAAA,KAAK,EAAE,cADC;AAER3B,MAAAA,IAAI,EAAE,8BAFE;AAGR4B,MAAAA,IAAI,EAAG,MAHC;AAIRC,MAAAA,gBAAgB,EAAG,KAJX;AAKRC,MAAAA,iBAAiB,EAAE,IALX;AAMRC,MAAAA,kBAAkB,EAAE;AANZ,KAAV;AAQD;;AACD,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAI1C,QAAQ,CAACoB,OAAb,EAAsB;AACpBpB,MAAAA,QAAQ,CAACoB,OAAT,CAAiBT,IAAjB;AACD;AACF,GAJD;;AAMA,QAAMc,sBAAsB,GAAG,MAAM;AACnC,UAAMkB,OAAO,GAAG7C,SAAS,CAACsB,OAAV,CAAkBwB,UAAlB,CAA6B,IAA7B,CAAhB;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA8B9C,QAAQ,CAACoB,OAA7C;AAEAtB,IAAAA,SAAS,CAACsB,OAAV,CAAkB2B,KAAlB,GAA0BF,UAA1B;AACA/C,IAAAA,SAAS,CAACsB,OAAV,CAAkB4B,MAAlB,GAA2BF,WAA3B;AAEAH,IAAAA,OAAO,CAACM,SAAR,CAAkBjD,QAAQ,CAACoB,OAA3B,EAAoC,CAApC,EAAuC,CAAvC,EAA0CyB,UAA1C,EAAsDC,WAAtD;AAEAhD,IAAAA,SAAS,CAACsB,OAAV,CAAkB8B,MAAlB,CAA0BC,IAAD,IAAU;AACjCpD,MAAAA,QAAQ,CAACqB,OAAT,GAAmB+B,IAAnB;AACD,KAFD;AAGD,GAZD;;AAcA,QAAMC,WAAW,GAAC,YAAU;AAC1B,QAAG1F,MAAM,IAAE,MAAX,EAAmB;AACjBA,MAAAA,MAAM,GAAG,OAAT;AACA4B,MAAAA,aAAa,CAAC,eAAD,CAAb;AACA3B,MAAAA,KAAK,GAAG,IAAI2C,IAAJ,EAAR;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBhC,KAApB;AACD,KALD,MAMK,IAAGD,MAAM,IAAE,OAAX,EAAoB;AACvBA,MAAAA,MAAM,GAAG,MAAT;AACA4B,MAAAA,aAAa,CAAC,gBAAD,CAAb;AACA1B,MAAAA,GAAG,GAAG,IAAI0C,IAAJ,EAAN;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB/B,GAAnB;AACA,UAAI2C,IAAI,GAAG3C,GAAG,GAACD,KAAf;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BY,IAA5B,EAAiCrC,OAAjC;AACAY,MAAAA,UAAU,CAACZ,OAAO,GAACqC,IAAT,CAAV;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBzB,OAAtB;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,GAAG,EAAE8B,QAAZ;AAAsB,QAAA,SAAS,EAAE,MAAM0C,gBAAgB,EAAvD;AAA2D,QAAA,EAAE,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,GAAG,EAAE5C,SAAb;AAAwB,QAAA,MAAM;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,yCAAsBoC,QAAQ,CAACtC,MAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAEwD,WAAtC;AAAA,kBACK/D;AADL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,EAYGG,MAAM,iBACL;AACE,MAAA,GAAG,EAAEA;AADP;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADF;AAoBD,CA7PD;;GAAMjB,W;;KAAAA,W;AA+PN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./camera.css\"\r\nimport sound1_ from '../../sound1.mp3'\r\nimport sound2_ from '../../sound2.MP3'\r\nimport sound3_ from '../../sound3.mp3'\r\nimport sound4_ from '../../sound4.mp3'\r\nimport Swal from 'sweetalert2'\r\n\r\nlet toggle = \"stop\";\r\nlet start,end;\r\nlet posture0,posture1,posture2,posture3,posture4;\r\nlet usetime,breaktime;\r\nlet sound, alertt, volume;\r\n  const TestOverlay = (props) => {\r\n    sound = props.sound;\r\n    alertt = props.alertt;\r\n    volume = props.volume;\r\n    usetime = props.usetime;\r\n    breaktime = props.breaktime;\r\n    const sound1 = new Audio(sound1_);\r\n    const sound2 = new Audio(sound2_);\r\n    const sound3 = new Audio(sound3_);\r\n    const sound4 = new Audio(sound4_);\r\n    posture0 = props.posture0;\r\n    posture1 = props.posture1; \r\n    posture2 = props.posture2;\r\n    posture3 = props.posture3;\r\n    posture4 = props.posture4;\r\n    const setUsetime = props.setUsetime;\r\n    const setPosture0 = props.setPosture0;\r\n    const setPosture1 = props.setPosture1;\r\n    const setPosture2 = props.setPosture2;\r\n    const setPosture3 = props.setPosture3;\r\n    const setPosture4 = props.setPosture4;\r\n    //const [posture, setPosture] = useState(3);\r\n    var posture = 0;\r\n    const [buttonName,setButtonName] = useState(\"start tracking\");\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n    console.log(\"i'm here\", sound,volume);\r\n    const [result, setResult] = useState(\"\");\r\n    const canvasRef = useRef();\r\n    const imageRef = useRef();\r\n    const videoRef = useRef();\r\n    const goAlert = (result) =>{\r\n      posture = 0;\r\n      console.log(\"goalert\", alertt);\r\n      if(alertt==0) alertSound();\r\n      else if(alertt == 1) alertPop(result);\r\n      else\r\n      {\r\n        alertSound();\r\n        alertPop(result);\r\n      }\r\n    }\r\n    const checkBreak =( )=>{\r\n      var now = new Date();\r\n      var temp = (now -start)/60000;\r\n      if(breaktime != 0){\r\n        if(temp>=breaktime){\r\n          alertSound();\r\n          alertBreak();\r\n        }\r\n      } \r\n    }\r\n    const checkPos = (text) => {\r\n      console.log(\"result:\",text)\r\n              //if bad posture \r\n              if(text != \"0\") \r\n              {\r\n                console.log(\"alert type\" , alertt);\r\n                console.log(\"sound\",sound);\r\n                console.log(\"bad\",posture);\r\n                posture = posture +1;\r\n                console.log(\"bad after\",posture);\r\n                if(text == \"1\") {\r\n                  setPosture1(posture1+1);\r\n                  console.log( \"posture 1 \", posture1);\r\n                }\r\n                else if(text == \"2\") {\r\n                  setPosture2(posture2+1);\r\n                  console.log( \"posture 2 \", posture2);\r\n                }\r\n                else if(text == \"3\") {\r\n                  setPosture3(posture3+1);\r\n                  console.log( \"posture 3 \", posture3);\r\n                }\r\n                else if(text == \"4\") {\r\n                  setPosture4(posture4+1);\r\n                  console.log( \"posture 4 \", posture4);\r\n                }\r\n              }\r\n              //else\r\n              else {\r\n                posture = 0;\r\n                setPosture0(posture0=>posture0+1);\r\n                console.log( \"posture 0 \", posture0);\r\n              }\r\n              console.log(posture);\r\n              //if bad posture for 3 times, alert\r\n              if(posture >= 3) goAlert(text);\r\n    }\r\n    const alertSound =()=>{\r\n      if(sound === \"sound1\") {\r\n        console.log(\"alert:\",sound, volume);\r\n        sound1.volume = volume/100;\r\n        sound1.play();\r\n        sound1.loop = false;\r\n      }\r\n      if(sound === \"sound2\") {\r\n        console.log(\"alert:\",sound, volume);\r\n        sound2.volume = volume/100;\r\n        sound2.play();\r\n        sound2.loop = false;\r\n      }\r\n      if(sound === \"sound3\") {\r\n        console.log(\"alert:\",sound, volume);\r\n        sound3.volume = volume/100;\r\n        sound3.play();\r\n        sound3.loop = false;\r\n      }\r\n      if(sound === \"sound4\") {\r\n        console.log(\"alert:\",sound, volume);\r\n        sound4.volume = volume/100;\r\n        sound4.play();\r\n        sound4.loop = false;\r\n      }\r\n    }\r\n    // Get camera feed\r\n    useEffect(() => {\r\n      async function getCameraStream() {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          audio: false,\r\n          video: true,\r\n        });\r\n    \r\n        if (videoRef.current) {      \r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      };\r\n    \r\n      getCameraStream();\r\n    }, []);\r\n\r\n    // Send iage to API\r\n    useEffect(() => {\r\n      const interval = setInterval(async () => {\r\n        if(toggle == \"stop\"){\r\n          return () => clearInterval(interval);\r\n        } \r\n        else {\r\n          captureImageFromCamera();\r\n\r\n          if (imageRef.current) {\r\n            const formData = new FormData();\r\n            formData.append('image', imageRef.current);\r\n\r\n            const response = await fetch('/classify', {\r\n              method: \"POST\",\r\n              body: formData,\r\n            });\r\n            if (response.status === 200) {\r\n              \r\n              const text = await response.text();\r\n              setResult(text);\r\n              checkPos(text);\r\n\r\n            } else {\r\n              setResult(\"Error from API. \");\r\n            }\r\n          }\r\n        }\r\n      }, 5000); // <- interval in ms\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n    \r\n    function printPos(result){\r\n      console.log(\"printpos\", result);\r\n      if(result==\"0\") return \"good\"\r\n      else if (result==\"1\") return \"tech-neck\"\r\n      else if (result == \"2\") return \"leaning\"\r\n      else if( result == \"3\") return \"sleeping\"\r\n      else if( result == \"4\")return \"resting in chin\"\r\n    }\r\n    function alertPop(result){\r\n      console.log(\"alert pop\", result);\r\n      var str = \"You are in \"+\"\\\"\"+printPos(result)+\"\\\"\"+\" posture\";\r\n      Swal.fire({\r\n        title: 'Bad Posture Detected!',\r\n        text: str,\r\n        icon: 'warning',\r\n        showCancelButton : false,\r\n        confirmButtonText: 'OK',\r\n        confirmButtonColor: '#FC5D5D',\r\n      })\r\n    }\r\n    function alertBreak(){\r\n      console.log(\"alert break\");\r\n      Swal.fire({\r\n        title: 'Break Time!!',\r\n        text: 'take a break and do exercise',\r\n        icon : 'info',\r\n        showCancelButton : false,\r\n        confirmButtonText: 'OK',\r\n        confirmButtonColor: '#FC5D5D',\r\n      })\r\n    }\r\n    const playCameraStream = () => {\r\n      if (videoRef.current) {\r\n        videoRef.current.play();\r\n      }\r\n    };\r\n\r\n    const captureImageFromCamera = () => {\r\n      const context = canvasRef.current.getContext('2d');\r\n      const { videoWidth, videoHeight } = videoRef.current;\r\n  \r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n  \r\n      context.drawImage(videoRef.current, 0, 0, videoWidth, videoHeight);\r\n  \r\n      canvasRef.current.toBlob((blob) => {\r\n        imageRef.current = blob;\r\n      })\r\n    };\r\n\r\n    const toggleAlert=function(){\r\n      if(toggle==\"stop\") {\r\n        toggle = \"start\";\r\n        setButtonName(\"stop tracking\");\r\n        start = new Date();\r\n        console.log(\"start\",start);\r\n      }\r\n      else if(toggle==\"start\") {\r\n        toggle = \"stop\";\r\n        setButtonName(\"start tracking\");\r\n        end = new Date();\r\n        console.log(\"end\", end);\r\n        var temp = end-start;\r\n        console.log(\"temp, usetime\",temp,usetime);\r\n        setUsetime(usetime+temp);\r\n        console.log(\"usetime\",usetime);\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <main>\r\n          <video ref={videoRef} onCanPlay={() => playCameraStream()} id=\"video\" />\r\n          <canvas ref={canvasRef} hidden></canvas>\r\n          <p>Currently seeing: {printPos(result)}</p>\r\n        </main>\r\n        <div className =\"startTrack\">\r\n          <button className=\"startBut\" onClick={toggleAlert}>\r\n              {buttonName}\r\n          </button>\r\n          \r\n        </div>\r\n        {imgSrc && (\r\n          <img\r\n            src={imgSrc}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default TestOverlay"]},"metadata":{},"sourceType":"module"}